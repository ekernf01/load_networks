Metadata-Version: 2.1
Name: load-networks
Version: 0.0.1
Summary: Efficiently load and manipulate gene regulatory networks
Home-page: https://github.com/ekernf01/load_networks
Author: Eric Kernfeld
Author-email: eric.kern13@gmail.com
Requires-Python: >=3.7
Description-Content-Type: text/markdown

Efficiently load and manipulate gene regulatory networks in Python. Built for [our collection of network data](https://github.com/ekernf01/network_collection).

This module defines a `LightNetwork` object. This is a thin wrapper around duckdb, which is used to query Parquet files (on disk), Pandas DataFrames (in memory), or some combination thereof. The main purpose is to avoid copying/instantiating a whole database of network edges and instead just copy/instantiate names of relevant files on disk. See the network collection to learn how the data are formatted or how to add your own networks.

### Usage

```python
import load_networks
# Set this to point to the "networks" folder in the network collection. 
load_networks.set_grn_path("path/to/network_collection/networks")
# What networks are available?
load_networks.load_grn_metadata()
# What tissues do they cover, or how many?
load_networks.list_subnetworks("gtex_rna")
[ load_networks.list_subnetworks(n)[0] for n in load_networks.load_grn_metadata()['name'] ]
# Show me the edges for a tissue (as a Pandas dataframe). 
load_networks.load_grn_by_subnetwork("gtex_rna", "Adipose_Subcutaneous.parquet").head()
# Show me the edges for all tissues in one network (as a Pandas dataframe).
[load_networks.load_grn_by_subnetwork("gtex_rna", n).shape for n in load_networks.list_subnetworks('gtex_rna') ]
# Query the edges for a tissue (as a lightweight, read-only interface, without loading the edges into memory)
load_networks.LightNetwork("gtex_rna").get_regulators("GAPDH")
load_networks.LightNetwork("gtex_rna", ["Adipose_Subcutaneous.parquet"]).get_regulators("GAPDH")
# Create a new LightNetwork object from your own parquet files or pandas dataframes
import pandas as pd
load_networks.LightNetwork(df = pd.DataFrame({"regulator": ["a"], "target": ["b"], "weight": [-1]}))
load_networks.LightNetwork(files = ["path/to/my/network.parquet","path/to/my/other/network.parquet"])
help(load_networks.LightNetwork)
```

